/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */



typedef volatile unsigned int  vuint32_t;
#include <stdint.h>

#define RCC_BASE                  0x40021000
#define GPIOA_BASE                0x40010800
#define RCC_APB2ENR               *((vuint32_t *)(RCC_BASE + 0x18))
#define GPIOA_CRH                 *((vuint32_t *)(GPIOA_BASE + 0x04 ))
#define GPIOA_ODR                 *((vuint32_t *)(GPIOA_BASE + 0x0C ))
#define RCC_IOPAEN                (1<<2)
#define GPIOA13                   (1<<13)


int main(void){

	RCC_APB2ENR |= RCC_IOPAEN;
	GPIOA_CRH &= 0xff0fffff;
	GPIOA_CRH |= 0X00200000;
	while(1){
		GPIOA_ODR |= GPIOA13;
		for(int i=0;i<10000000;i++);
		GPIOA_ODR &= ~GPIOA13;
	}


}
